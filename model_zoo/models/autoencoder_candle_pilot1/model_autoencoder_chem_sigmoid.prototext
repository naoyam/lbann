trainer {
  block_size: 256
  procs_per_trainer: 0
  num_parallel_readers: 1
}
model {
  ### Model description and network architecture taken from:
  ### https://lc.llnl.gov/bitbucket/projects/BIOM/repos/molresp/browse/tf_model.py?at=TensorFlow_chemClass
  ### This network description is anologous to AutoEncoder_Chem_Sigmoid
  data_layout: "model_parallel"
  mini_batch_size: 128
  num_epochs: 4

  ###################################################
  # Objective function
  ###################################################

  objective_function {
    layer_term { layer: "mean_squared_error" }
  }

  ###################################################
  # Callbacks
  ###################################################
  summarizer {
    dir: "."
  }
  callback {
    print {
      interval: 1
    }
  }
  callback {
    timer {
    }
  }
  callback {
    summary {
      batch_interval: 1
      mat_interval: 25
    }
  }

  ###################################################
  # start of layers
  ###################################################

  #######
  # INPUT
  #######
  layer {
    name: "input"
    children: "data dummy"
    data_layout: "data_parallel"
    input {
      target_mode: "reconstruction"
    }
  }
  layer {
    parents: "input"
    name: "data"
    data_layout: "data_parallel"
    split {}
  }
  layer {
    parents: "input"
    name: "dummy"
    data_layout: "data_parallel"
    dummy {}
  }

  #################
  # FULLY_CONNECTED encode1
  #################
  layer {
    parents: "data"
    name: "encode1"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 2000
      has_bias: true
    }
  }

  ######
  # SIGMOID sigmoid1
  ######
  layer {
    parents: "encode1"
    name: "sigmoid1"
    data_layout: "model_parallel"
    sigmoid {
    }
  }

  #################
  # FULLY_CONNECTED encode2
  #################
  layer {
    parents: "sigmoid1"
    name: "encode2"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 500
      has_bias: true
    }
  }

  #######
  # SIGMOID sigmoid2
  #######
  layer {
    parents: "encode2"
    name: "sigmoid2"
    data_layout: "model_parallel"
    sigmoid {
    }
  }

  #################
  # FULLY_CONNECTED encode3
  #################
  layer {
    parents: "sigmoid2"
    name: "encode3"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 100
      has_bias: true
    }
  }

  #######
  # SIGMOID sigmoid3
  #######
  layer {
    parents: "encode3"
    name: "sigmoid3"
    data_layout: "model_parallel"
    sigmoid {
    }
  }


  #################
  # FULLY_CONNECTED decode3
  #################
  layer {
    parents: "sigmoid3"
    name: "decode3"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 500
      has_bias: true
    }
  }

  #######
  # SIGMOID sigmoid4
  #######
  layer {
    parents: "decode3"
    name: "sigmoid4"
    data_layout: "model_parallel"
    sigmoid {
    }
  }

  #################
  # FULLY_CONNECTED decode2
  #################
  layer {
    parents: "sigmoid4"
    name: "decode2"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 2000
      has_bias: true
    }
  }


  #######
  # SIGMOID sigmoid5
  #######
  layer {
    parents: "decode2"
    name: "sigmoid5"
    data_layout: "model_parallel"
    sigmoid {
    }
  }

  #################
  # FULLY_CONNECTED decode1
  #################
  layer {
    parents: "sigmoid5"
    name: "decode1"
    data_layout: "model_parallel"
    num_neurons_from_data_reader: true
    fully_connected {
      has_bias: true
    }
  }

  #######
  # SIGMOID sigmoid6
  #######
  layer {
    parents: "decode1"
    name: "sigmoid6"
    data_layout: "model_parallel"
    sigmoid {
    }
  }


  #################
  # RECONSTRUCTION
  #################
  layer {
    parents: "relu10"
    name: "reconstruction"
    data_layout: "model_parallel"
    split {}
  }
  layer {
    parents: "reconstruction data"
    name: "mean_squared_error"
    data_layout: "model_parallel"
    mean_squared_error {}
  }

  ###################################################
  # end of layers
  ###################################################
}
