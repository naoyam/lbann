trainer {
  block_size: 256
  procs_per_trainer:0
}
model {
  random_init_models_differently: true
  objective_function {
    l2_weight_regularization {
      scale_factor: 0.0001
    }
    layer_term {
      scale_factor: 1.0
      #layer: "disc1_real_eval"
      layer: "disc1_real_bce"
    }
    layer_term {
      scale_factor: 1.0
      #layer: "disc1_fake_eval"
      layer: "disc1_fake_bce"
    }
    layer_term {
      scale_factor: 0.05
      #layer: "g_adv1_eval"
      layer: "g_adv1_bce"
    }
    layer_term {
      scale_factor: 0.025
      #layer: "l_l2_y_eval"
      layer: "l_l2_y"
    }
  }
 # metric {
 #   layer_metric {
      #unit: "%"
 #     layer: "disc1_real_eval"
 #   }
 # }
 # metric {
 #   layer_metric {
      #unit: "%"
 #     layer: "disc1_fake_eval"
 #   }
 # }
 # metric {
 #   layer_metric {
 #     layer: "g_adv1_eval"
 #   }
 # }
  metric {
    layer_metric {
      #layer: "l_l2_y_eval"
      layer: "l_l2_y"
    }
  }
  num_epochs: 100
  data_layout: "data_parallel"
  layer {
    input {
      data_set_per_model: true
      target_mode: "N/A"
    }
    name: "data1"
    data_layout: "data_parallel"
  }

  layer {
    name: "zero"
    data_layout: "data_parallel"
    constant {
      value: 0.0
      num_neurons: "1"
    }
  }
  layer {
    name: "one"
    data_layout: "data_parallel"
    constant {
      value: 1.0
      num_neurons: "1"
    }
  }

  layer {
    name: "slice_data"
    data_layout: "data_parallel"
    parents: "data1"
    children: "image_data_dummy param_data_id"
    slice {
      slice_points: "0 2500 2511"
    }
  }
  layer {
    identity {
    }
    name: "image_data_dummy"
    data_layout: "data_parallel"
    parents: "slice_data"
  }
  layer {
    identity {
    }
    name: "param_data_id"
    data_layout: "data_parallel"
    parents: "slice_data"
  }
  layer {
    fully_connected {
      num_neurons: 16
      has_bias: true
    }
    name: "gen1fc1"
    data_layout: "data_parallel"
    #weights: "gen1fc1linearity"
    parents: "param_data_id"
  }
  layer {
    relu {
    }
    name: "gen1relu1"
    data_layout: "data_parallel"
    parents: "gen1fc1"
  }
  layer {
    fully_connected {
      num_neurons: 128
      has_bias: true
    }
    name: "gen1fc2"
    data_layout: "data_parallel"
    #weights: "gen1fc2linearity"
    parents: "gen1relu1"
  }
  layer {
    relu {
    }
    name: "gen1relu2"
    data_layout: "data_parallel"
    parents: "gen1fc2"
  }
  layer {
    dropout {
      keep_prob: 0.8
    }
    name: "gen1dropout1"
    data_layout: "data_parallel"
    parents: "gen1relu2"
  }
  layer {
    fully_connected {
      num_neurons: 512
      has_bias: true
    }
    name: "gen1fc3"
    data_layout: "data_parallel"
    #weights: "gen1fc3linearity"
    parents: "gen1dropout1"
  }
  layer {
    relu {
    }
    name: "gen1relu3"
    data_layout: "data_parallel"
    parents: "gen1fc3"
  }
  layer {
    fully_connected {
      num_neurons: 2500
      has_bias: true
    }
    name: "gen1fc4"
    data_layout: "data_parallel"
    #weights: "gen1fc4linearity"
    parents: "gen1relu3"
  }
  layer {
    fully_connected {
      num_neurons: 128
      has_bias: true
    }
    name: "d1fc1_real"
    data_layout: "data_parallel"
    weights: "d1fc1linearity d1fc1bias"
    parents: "data1"
  }
  layer {
    relu {
    }
    name: "d1relu1_real"
    data_layout: "data_parallel"
    parents: "d1fc1_real"
  }
  layer {
    fully_connected {
      num_neurons: 16
      has_bias: true
    }
    name: "d1fc2_real"
    data_layout: "data_parallel"
    weights: "d1fc2linearity d1fc2bias"
    parents: "d1relu1_real"
  }
  layer {
    relu {
    }
    name: "d1relu2_real"
    data_layout: "data_parallel"
    parents: "d1fc2_real"
  }
  layer {
    fully_connected {
      num_neurons: 1
      has_bias: true
    }
    name: "d1fc3_real"
    data_layout: "data_parallel"
    weights: "d1fc3linearity d1fc3bias"
    parents: "d1relu2_real"
  }
  layer {
    name: "concat_gsample_n_param"
    data_layout: "data_parallel"
    parents: "gen1fc4 param_data_id"
    children: "d1_stop_gradient d2_dummy"
    concatenation {
    }
  }
  layer {
    name: "d1_stop_gradient"
    data_layout: "data_parallel"
    parents: "concat_gsample_n_param"
    stop_gradient {
    }
  }
  layer {
    fully_connected {
      num_neurons: 128
      has_bias: true
    }
    name: "d1fc1_fake"
    data_layout: "data_parallel"
    weights: "d1fc1linearity d1fc1bias"
    parents: "d1_stop_gradient"
  }
  layer {
    relu {
    }
    name: "d1relu1_fake"
    data_layout: "data_parallel"
    parents: "d1fc1_fake"
  }
  layer {
    fully_connected {
      num_neurons: 16
      has_bias: true
    }
    name: "d1fc2_fake"
    data_layout: "data_parallel"
    weights: "d1fc2linearity d1fc2bias"
    parents: "d1relu1_fake"
  }
  layer {
    relu {
    }
    name: "d1relu2_fake"
    data_layout: "data_parallel"
    parents: "d1fc2_fake"
  }
  layer {
    fully_connected {
      num_neurons: 1
      has_bias: true
    }
    name: "d1fc3_fake"
    data_layout: "data_parallel"
    weights: "d1fc3linearity d1fc3bias"
    parents: "d1relu2_fake"
  }
  layer {
    sigmoid_binary_cross_entropy {
    }
    name: "disc1_real_bce"
    data_layout: "data_parallel"
    parents: "d1fc3_real one"
  }
  #layer {
  #  name: "disc1_real_eval"
  #  data_layout: "data_parallel"
  #  parents: "disc1_real_bce"
  #  evaluation {
  #  }
  #}
  layer {
    sigmoid_binary_cross_entropy {
    }
    name: "disc1_fake_bce"
    data_layout: "data_parallel"
    parents: "d1fc3_fake zero"
  }
  #layer {
  #  name: "disc1_fake_eval"
  #  data_layout: "data_parallel"
  #  parents: "disc1_fake_bce"
  #  evaluation {
  #  }
  #}
  layer {
    identity {
    }
    name: "d2_dummy"
    data_layout: "data_parallel"
    parents: "concat_gsample_n_param"
  }
  layer {
    freeze: true
    fully_connected {
      num_neurons: 128
      has_bias: true
    }
    name: "d2fc1"
    data_layout: "data_parallel"
    parents: "d2_dummy"
  }
  layer {
    relu {
    }
    name: "d2relu1"
    data_layout: "data_parallel"
    parents: "d2fc1"
  }
  layer {
    freeze: true
    fully_connected {
      num_neurons: 16
      has_bias: true
    }
    name: "d2fc2"
    data_layout: "data_parallel"
    parents: "d2relu1"
  }
  layer {
    relu {
    }
    name: "d2relu2"
    data_layout: "data_parallel"
    parents: "d2fc2"
  }
  layer {
    freeze: true
    fully_connected {
      num_neurons: 1
      has_bias: true
    }
    name: "d2fc3"
    data_layout: "data_parallel"
    parents: "d2relu2"
  }
  layer {
    sigmoid_binary_cross_entropy {
    }
    name: "g_adv1_bce"
    data_layout: "data_parallel"
    parents: "d2fc3 one"
  }
  #layer {
  #  name: "g_adv1_eval"
  #  data_layout: "data_parallel"
  #  parents: "g_adv1_bce"
  #  evaluation {
  #  }
  #}
  #L2loss
  layer {
    name: "gsample_minus_y"
    data_layout: "data_parallel"
    parents: "gen1fc4 image_data_dummy"
   weighted_sum {
      scaling_factors: "1 -1"
    }
  }
  layer {
    l2_norm2 {
    }
    name: "l_l2_y"
    data_layout: "data_parallel"
    #device_allocation: "cpu"
    parents: "gsample_minus_y"
  }

  #layer {
  #  name: "l_l2_y_eval"
  #  data_layout: "data_parallel"
  #  parents: "l_l2_y"
  #  evaluation {
  #  }
  #}
  weights {
    name: "gen1fc1linearity"
    initializer {
      he_normal_initializer {
      }
    }
  }
  weights {
    name: "gen1fc2linearity"
    initializer {
      he_normal_initializer {
      }
    }
  }
  weights {
    name: "gen1fc3linearity"
    initializer {
      he_normal_initializer {
      }
    }
  }
  weights {
    name: "gen1fc4linearity"
    initializer {
      he_normal_initializer {
      }
    }
  }
  weights {
    name: "d1fc1linearity"
    initializer {
      he_normal_initializer {
      }
    }
  }
  weights {
    name: "d1fc1bias"
  }
  weights {
    name: "d1fc2linearity"
    initializer {
      he_normal_initializer {
      }
    }
  }
  weights {
    name: "d1fc2bias"
  }
  weights {
    name: "d1fc3linearity"
    initializer {
      he_normal_initializer {
      }
    }
  }
  weights {
    name: "d1fc3bias"
  }
  mini_batch_size: 64
  callback {
    print {
      interval: 1
    }
  }
  callback {
    timer {
    }
  }
  callback {
    replace_weights {
      source_layers: "d1fc1_real d1fc2_real d1fc3_real"
      destination_layers: "d2fc1 d2fc2 d2fc3"
      batch_interval: 1
    }
  }
  #callback {
  #  dump_outputs {
  #    directory: "/dir/to/save/imgs"
  #    batch_interval: 10
  #    layers: "gen1fc4"
  #    execution_modes: "test"
  #  }
  #}
  #callback {
  #  ltfb {
  #    batch_interval: 100
  #    low_score_wins: true
  #    metric: "l_l2_y_eval"
  #    #weights_tosend: "gen1fc1linearity gen1fc1bias gen1fc2linearity gen1fc2bias gen1fc3linearity gen1fc3bias gen1fc4linearity gen1fc4bias"
  #    weights: "gen1fc1_linearity_weights gen1fc1_bias_weights gen1fc2_linearity_weights gen1fc2_bias_weights gen1fc3_linearity_weights gen1fc3_bias_weights gen1fc4_linearity_weights gen1fc4_bias_weights"
  #    }

 # }
}
