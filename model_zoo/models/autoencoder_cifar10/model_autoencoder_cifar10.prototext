trainer {
}
model {
  data_layout: "model_parallel"
  mini_batch_size: 32
  num_epochs: 100

  ###################################################
  # Objective function
  ###################################################

  objective_function {
    layer_term { layer: "mean_squared_error" }
  }

  ###################################################
  # Metrics
  ###################################################

  metric {
    layer_metric {
      name: "mean squared error"
      layer: "mean_squared_error"
    }
  }

  ###################################################
  # Callbacks
  ###################################################
  callback {
    print {
      interval: 1
    }
  }

  ###################################################
  # start of layers
  ###################################################

  #######
  # INPUT
  #######
  layer {
    name: "data"
    children: "image dummy"
    data_layout: "data_parallel"
    input {}
  }
  layer {
    parents: "data"
    name: "image"
    data_layout: "data_parallel"
    split {}
  }
  layer {
    parents: "data"
    name: "dummy"
    data_layout: "data_parallel"
    dummy {}
  }

  #################
  # FULLY_CONNECTED encode1
  #################
  layer {
    parents: "image"
    name: "encode1"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 1000
      has_bias: true
    }
  }

  # RELU
  ######
  layer {
    parents: "encode1"
    name: "relu1"
    data_layout: "model_parallel"
    relu {
    }
  }

  # DROPOUT
  #########
  layer {
    parents: "relu1"
    name: "dropout1"
    data_layout: "model_parallel"
    dropout {
      keep_prob: 0.8
    }
  }


  #################
  # FULLY_CONNECTED decode1
  #################
  layer {
    parents: "dropout1"
    name: "decode1"
    data_layout: "model_parallel"
    hint_layer: "image"
    fully_connected {
      has_bias: true
    }
  }

  # SIGMOID
  #########
  layer {
    parents: "decode1"
    name: "sigmoid1"
    data_layout: "model_parallel"
    sigmoid {
    }
  }

  # DROPOUT
  #########
  layer {
    parents: "sigmoid1"
    name: "dropout2"
    data_layout: "model_parallel"
    dropout {
      keep_prob: 0.8
    }
  }

  #################
  # RECONSTRUCTION
  #################
  layer {
    parents: "dropout2 image"
    name: "mean_squared_error"
    data_layout: "data_parallel"
    mean_squared_error {}
  }

  ###################################################
  # end of layers
  ###################################################
}
