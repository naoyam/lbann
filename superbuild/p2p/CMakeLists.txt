enable_language(CXX)

set(P2P_URL ssh://git@cz-bitbucket.llnl.gov:7999/~maruyama/p2p.git
  CACHE STRING "The URL from which to clone P2P")

set(P2P_TAG "master"
  CACHE STRING "The git tag to checkout for P2P")

set(P2P_CMAKE_BUILD_TYPE "${CMAKE_BUILD_TYPE}"
  CACHE STRING "The build type for P2P.")

# Where to install P2P
set (P2P_CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}"
  CACHE PATH "The installation location of P2P.")

# Configuration options explicitly exposed
#option(P2P_ENABLE_CUDA "Enable CUDA support." OFF)
#option(P2P_ENABLE_MPI_CUDA "Enable MPI-CUDA support." ON)
#option(P2P_ENABLE_MPI_CUDA_RMA "Enable RMA in MPI-CUDA." ON)
#enable_language(CUDA)

# Get the list of P2P variables
get_property(P2P_VARIABLES DIRECTORY PROPERTY VARIABLES)
list(FILTER P2P_VARIABLES INCLUDE REGEX
  "^P2P_.*\|^LBANN_SB_FWD_P2P_.*")
list(FILTER P2P_VARIABLES EXCLUDE REGEX "P2P_URL\|P2P_TAG")

create_cmake_arguments(
  OUTPUT_VARIABLE P2P_CMAKE_ARGS
  PACKAGE_NAME P2P
  SKIP_VARS_WITH_PREFIXES "LBANN_SB"
  EXTRA_REMOVE_PREFIXES "LBANN_SB_FWD_P2P"
  VARIABLES ${P2P_VARIABLES})

include(ExternalProject)
ExternalProject_Add(P2P
  PREFIX ${CMAKE_CURRENT_BINARY_DIR}
  TMP_DIR ${CMAKE_CURRENT_BINARY_DIR}/tmp
  STAMP_DIR ${CMAKE_CURRENT_BINARY_DIR}/stamp
  GIT_REPOSITORY ${P2P_URL}
  GIT_TAG ${P2P_TAG}
  SOURCE_DIR ${CMAKE_CURRENT_BINARY_DIR}/src
  BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR}/build
  INSTALL_DIR ${P2P_CMAKE_INSTALL_PREFIX}
  USES_TERMINAL_BUILD 1
  LOG_DOWNLOAD 1
  LOG_UPDATE 1
  LOG_CONFIGURE 1
  LOG_BUILD 1
  LOG_INSTALL 1
  LOG_TEST 1
  LIST_SEPARATOR |
  CMAKE_ARGS
  -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
  -DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}
  -DCMAKE_CUDA_COMPILER=${CMAKE_CUDA_COMPILER}
  -DCMAKE_CUDA_FLAGS=${CMAKE_CUDA_FLAGS}
  -DCMAKE_CUDA_HOST_COMPILER=${CMAKE_CUDA_HOST_COMPILER}
  ${P2P_CMAKE_ARGS}
  )

set(P2P_DIR ${P2P_CMAKE_INSTALL_PREFIX}
  CACHE INTERNAL "The install prefix of P2P.")
